const express = require('express');
const shell = require('shelljs');
const fs = require("fs");
const app = express();
const port = 1500;

//http://localhost:3000/gottahackem?ip=jamesbury.ca&p=1-1024

app.get('/exploits', (req, res) => {
    if (shell.exec('node runshell.js '+req.query.ip+' '+req.query.p).code !== 0) {
        shell.echo('Error: Scan failed. Guess you\'re not gonna scan em all.');
        shell.exit(1);
    }

    fs.readFile('./exploits.json', (err, data) => {
        if (err) throw err;

        const fileContent = data.toString('utf8');

        const brokenString = fileContent.split('\n');
        brokenString.splice(0,1);
        const newText = brokenString.join('\n');

        const newerText = newText.split('\n');
        newerText.splice(0,1);
        const newestText = newerText.join('\n');



        let textString = newestText.trim();
        let pleaseWork = textString.replace(/(\r\n|\n|\r|\t)/gm,'');
        const worked = pleaseWork.replace(/(}{)/gm,'},{');
        jsonObj = JSON.parse('['+worked+']');
        let counter = 0;
        for (i=0; i<jsonObj.length; i++) {
            if (jsonObj[i]["RESULTS_EXPLOIT"].length == 0 || jsonObj[i]["RESULTS_EXPLOIT"] === undefined){
                jsonObj.splice(i--, 1);
            }
        }
        res.set({
            'Content-Type': 'text/plain',
            'Content-Length': '123',
            'ETag': '12345',
            'Access-Control-Allow-Origin': '*'
        });
        res.send(jsonObj);
    });
});

app.get('/ports', (req, res) => {
    if (shell.exec('node runshell.js '+req.query.ip+' '+req.query.p).code !== 0) {
        shell.echo('Error: Scan failed. Guess you\'re not gonna scan em all.');
        shell.exit(1);
    }

    fs.readFile('./ports.json', (err, data) => {
        if (err) throw err;

    const fileContent = data.toString('utf8');
    res.set({
        'Content-Type': 'text/plain',
        'Content-Length': '123',
        'ETag': '12345',
        'Access-Control-Allow-Origin': '*'
    });
    res.send(fileContent);
    });
});


app.listen(port, () => console.log(`Example app listening on port ${port}!`))